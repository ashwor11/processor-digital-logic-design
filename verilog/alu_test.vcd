$date
	Sat Jan 06 02:51:43 2024
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module ALU_Testbench $end
$var reg 18 ! operand1 [17:0] $end
$var reg 18 " operand2 [17:0] $end
$var reg 2 # alu_select [1:0] $end
$var reg 1 $ reset $end
$var reg 1 % enable $end
$var reg 1 & clk $end
$var wire 1 ' result [17] $end
$var wire 1 ( result [16] $end
$var wire 1 ) result [15] $end
$var wire 1 * result [14] $end
$var wire 1 + result [13] $end
$var wire 1 , result [12] $end
$var wire 1 - result [11] $end
$var wire 1 . result [10] $end
$var wire 1 / result [9] $end
$var wire 1 0 result [8] $end
$var wire 1 1 result [7] $end
$var wire 1 2 result [6] $end
$var wire 1 3 result [5] $end
$var wire 1 4 result [4] $end
$var wire 1 5 result [3] $end
$var wire 1 6 result [2] $end
$var wire 1 7 result [1] $end
$var wire 1 8 result [0] $end

$scope module uut $end
$var wire 1 9 operand1 [17] $end
$var wire 1 : operand1 [16] $end
$var wire 1 ; operand1 [15] $end
$var wire 1 < operand1 [14] $end
$var wire 1 = operand1 [13] $end
$var wire 1 > operand1 [12] $end
$var wire 1 ? operand1 [11] $end
$var wire 1 @ operand1 [10] $end
$var wire 1 A operand1 [9] $end
$var wire 1 B operand1 [8] $end
$var wire 1 C operand1 [7] $end
$var wire 1 D operand1 [6] $end
$var wire 1 E operand1 [5] $end
$var wire 1 F operand1 [4] $end
$var wire 1 G operand1 [3] $end
$var wire 1 H operand1 [2] $end
$var wire 1 I operand1 [1] $end
$var wire 1 J operand1 [0] $end
$var wire 1 K operand2 [17] $end
$var wire 1 L operand2 [16] $end
$var wire 1 M operand2 [15] $end
$var wire 1 N operand2 [14] $end
$var wire 1 O operand2 [13] $end
$var wire 1 P operand2 [12] $end
$var wire 1 Q operand2 [11] $end
$var wire 1 R operand2 [10] $end
$var wire 1 S operand2 [9] $end
$var wire 1 T operand2 [8] $end
$var wire 1 U operand2 [7] $end
$var wire 1 V operand2 [6] $end
$var wire 1 W operand2 [5] $end
$var wire 1 X operand2 [4] $end
$var wire 1 Y operand2 [3] $end
$var wire 1 Z operand2 [2] $end
$var wire 1 [ operand2 [1] $end
$var wire 1 \ operand2 [0] $end
$var wire 1 ] alu_select [1] $end
$var wire 1 ^ alu_select [0] $end
$var wire 1 _ reset $end
$var wire 1 ` enable $end
$var wire 1 a clk $end
$var reg 18 b result [17:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11001100 !
b10101010 "
b0 #
0$
1%
0&
bx b
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
0a
1`
0_
0^
0]
0\
1[
0Z
1Y
0X
1W
0V
1U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
1H
1G
0F
0E
1D
1C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
$end
#5
1&
1a
b101110110 b
08
17
16
05
14
13
12
01
10
0/
0.
0-
0,
0+
0*
0)
0(
0'
#10
b1 #
0&
1^
0a
#15
1&
1a
b10001000 b
07
06
15
04
03
02
11
00
#20
b10 #
0&
0^
1]
0a
#25
1&
1a
b111111111101110111 b
18
17
16
05
14
13
12
01
10
1/
1.
1-
1,
1+
1*
1)
1(
1'
#30
b11 #
0&
1^
0a
#35
1&
1a
b111111111100010001 b
07
06
03
02
